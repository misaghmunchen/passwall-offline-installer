name: build-ipk

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set variables
        run: |
          # SDK مناسب arm_cortex-a7_neon-vfpv4 (مثلاً ipq40xx/generic برای 23.05.5)
          echo "SDK_URL=https://downloads.openwrt.org/releases/23.05.5/targets/ipq40xx/generic/openwrt-sdk-23.05.5-ipq40xx-generic_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz" >> $GITHUB_ENV
          echo "PKG_ARCH=arm_cortex-a7_neon-vfpv4" >> $GITHUB_ENV

      - name: Fetch OpenWrt SDK
        run: |
          set -eux
          curl -L "$SDK_URL" -o sdk.tar.xz
          tar -xJf sdk.tar.xz
          mv openwrt-sdk-* sdk

      - name: Feed setup (luci + update/install)
        run: |
          set -eux
          cd sdk
          # جلوگیری از تکراری شدن feed
          sed -i '/^src-git luci /d' feeds.conf.default
          echo 'src-git luci https://github.com/openwrt/luci.git;openwrt-23.05' >> feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Defconfig
        run: |
          set -eux
          cd sdk
          make defconfig
          echo 'CONFIG_PACKAGE_gmp=m' >> .config
          echo 'CONFIG_PACKAGE_nettle=m' >> .config
          make defconfig
          
      - name: Build packages (gmp, nettle)
        run: |
          set -eux
          cd sdk
          # مسیر صحیح پکیج‌ها در درخت اصلی OpenWrt
          make package/libs/gmp/compile -j"$(nproc)" V=s
          make package/libs/nettle/compile -j"$(nproc)" V=s

      - name: Collect IPKs
        run: |
          set -eux
          mkdir -p out
          # ipk های ساخته‌شده داخل bin/packages/<arch>/ قرار می‌گیرند
          find sdk/bin/packages/$PKG_ARCH -type f \( -name "*gmp*ipk" -o -name "*nettle*ipk" \) -print -exec cp {} out/ \;
          ls -l out

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ipks
          path: out
